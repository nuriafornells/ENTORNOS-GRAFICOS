PHP: variables, tipos, operadores, expresiones, estructuras de control

Ejercicio 1:
variables y tipos:
$a = TRUE; boolean
$b = "xyz";   string (comillas dobles)
$c = 'xyz';   string (comillas simples)
$d = 12;      integer

Funciones y sus parámetros
function doble($i) {
    return $i*2;
}
Parámetro: $i
Devuelve el doble del valor recibido.

operadores:
* multiplicación
+=  suma y asignación
++  incremento
? :  operador ternario
= asignación
, separación de argumentos en echo

Funciones PHP
gettype($var) devuelve el tipo de dato de la variable
is_int($d) verifica si $d es entero
is_string($a) verifica si $a es string

estructuras de control:
if (is_int($d)) {
    $d += 4;
}


if (is_string($a)) {
    echo "Cadena: $a";
}

$d = $a ? ++$d : $d*3

salida:
booleanstringstringinteger1xyzxyz184444


Ejercicio 2:

a y b ) todos los ejemplos son equivalentes. Todos imprimen los números del 1 al 10 pero usando distintos bucles o formato
c) ambos codigos son equivalentes en comportamiento, pero uno usa if-elseif y el otro switch

Ejercicio 3:

a) Este código genera una tabla HTML de 5 filas y 2 columnas usando PHP, con celdas vacias 
for ($r = 1; $r <= $row; $r++): recorre las filas
for ($c = 1; $c <= $col; $c++): recorre las columnas dentro de cada fila
echo "<td>&nbsp;</td>": imprime una celda vacía

b) Este código muestra un formulario para ingresar la edad, y al enviarlo, evalúa si la persona es mayor o menor de edad según si tiene 21 años o más
if (!isset($_POST['submit'])): si el formulario no fue enviado, se muestra el formulario
$_SERVER['PHP_SELF']: hace que el formulario se envíe a la misma página
$_POST['age']: obtiene la edad ingresada
if ($age >= 21): evalúa si es mayor de edad
y muestra "Mayor de edad" o "Menor de edad" según el valor ingresado

Ejercicio 4:
En el primer echo , todavia no se definieron las variables $flor ni $color, entonces como estan vacias solo devuelve "El".
En el segundo echo devuelve el texto completo con el valor de las variables "El clavel blanco" ya que en este punto si se definieron, con el include 'datos.php' previo

Ejercicio 5:
Analisis: (puse un 0 en contador.dat para que el contador inicie en 0)
El archivo contador.php se encarga de leer cuántas visitas hay guardadas en contador.dat (que inició en 0), luego suma 1 a ese número, guardar el nuevo número en el archivo contador.dat y muestra el total actualizado en pantalla.
 - con "r", "w" en $abrir = fopen($archivo) permite abrir el archivo para leerlo (r) y para editarlo (w) que borra el contenido que tenia antes
El archivo visitas.php solo contiene al archivo de contador.php
El archivo contador.dat se usa para guardar el número total de visitas, para que persista

PHP: arrays, funciones 

Ejercicio 1:
Si, son equivalentes porque construye el mismo array 

Ejercicio 2:

a) salida: bar1 ($matriz["x"] muestra "bar" y $matriz[12] muestra true que es "1")
b) salida 5942 (de $matriz["unamatriz"][6] el 5, de  $matriz["unamatriz"][13] el 9, y de $matriz["unamatriz"]["a"] el 42)
c) No hay salida porque no hay echo

Ejercicio 3
a) Devuelve: Has entrado en esta pagina a las 15 horas, con 35 minutos y 12 segundos, del 10/9/2024
b) Devuelve: 5+6=11

Ejercicio 4)

function comprobar_nombre_usuario($nombre_usuario){  
   if (strlen($nombre_usuario)<3 || strlen($nombre_usuario)>20){  
      echo $nombre_usuario . " no es válido<br>";  
      return false;  
   }  
   $permitidos = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-_";  
   for ($i=0; $i<strlen($nombre_usuario); $i++){  
      if (strpos($permitidos, substr($nombre_usuario,$i,1))===false){  
         echo $nombre_usuario . " no es válido<br>";  
         return false;  
      }  
   }  
   echo $nombre_usuario . " es válido<br>";  
   return true;  
}

// Pruebas
comprobar_nombre_usuario("pepe");
comprobar_nombre_usuario("a");
comprobar_nombre_usuario("usuario_1");
comprobar_nombre_usuario("user!");

echo "<hr>";

Terminaría siendo:
comprobar_nombre_usuario("pepe");    (es válido)
comprobar_nombre_usuario("a");     ( no es válido)
comprobar_nombre_usuario("usuario_1"); (es válido)
comprobar_nombre_usuario("user!");    ( no es válido)